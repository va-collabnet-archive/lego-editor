#created on: March 17, 2013
package gov.va.legoEdit.drools.rules

#list any import classes here.
import java.io.File;
import java.lang.String;
import java.util.Collection;

import org.ihtsdo.tk.api.coordinate.ViewCoordinate;
import org.ihtsdo.tk.binding.Snomed;
import gov.va.legoEdit.drools.LegoSpec;
import gov.va.legoEdit.drools.actions.FailValidatorAction;
import gov.va.legoEdit.drools.facts.AssertionFact;
import gov.va.legoEdit.drools.facts.ConceptFact;
import gov.va.legoEdit.drools.facts.PendingConceptFact;
import gov.va.legoEdit.gui.legoTreeView.ConceptUsageType; 
import gov.va.legoEdit.drools.facts.Context;


#declare any global variables here

global Collection actions;

rule "Discernible IS Observable Entity"
	when
		 (and
			(AssertionFact(getType() == ConceptUsageType.DISCERNIBLE))
			 ($dropObject: ConceptFact(this not isKindOf Snomed.OBSERVABLE_ENTITY, context == Context.DROP_OBJECT))
		  )
	then
		actions.add(new FailValidatorAction(FailValidatorAction.ReasonFailed.DISCERNIBLE_OBSERVABLE));
end

rule "Observervible Source Rel with CHARACTERIZES Rel Type must have Process (or descendents) Target-Characterizes is Pending Concept"
	when
		 (and
			 ($sourceConcept: ConceptFact(this  isKindOf Snomed.OBSERVABLE_ENTITY, context == Context.SOURCE_CONCEPT))
			 ($typeConcept: PendingConceptFact(getId().equals("3416a75f-4cea-3109-907c-acd8e2f2aefc"), context == Context.TYPE_CONCEPT))
			 ($destinationConcept: ConceptFact(this not isKindOf LegoSpec.PROCESS_TYPE, context == Context.DESTINATION_CONCEPT))
		  )
	then
		actions.add(new FailValidatorAction(FailValidatorAction.ReasonFailed.OBSERVABLE_CHARACTERIZES_PROCESS_REL_MESSAGE));
end

rule "Observervible Source Rel with CHARACTERIZES Rel Type must have Process (or descendents) Target-Characterizes is in SCT Database"
	when
		 (and
			 ($sourceConcept: ConceptFact(this  isKindOf Snomed.OBSERVABLE_ENTITY, context == Context.SOURCE_CONCEPT))
			 ($typeConcept: ConceptFact(getUUID().equals("3416a75f-4cea-3109-907c-acd8e2f2aefc"), context == Context.TYPE_CONCEPT))
			 ($destinationConcept: ConceptFact(this not isKindOf LegoSpec.PROCESS_TYPE, context == Context.DESTINATION_CONCEPT))
		  )
	then
		actions.add(new FailValidatorAction(FailValidatorAction.ReasonFailed.OBSERVABLE_CHARACTERIZES_PROCESS_REL_MESSAGE));
end



rule "Procedure Source Rel with Method Rel Type must have Action (or descendents) Target-Characterizes"
	when
		 (and 
			 ($sourceConcept: ConceptFact(this  isKindOf Snomed.PROCEDURE, context == Context.SOURCE_CONCEPT))
			 ($typeConcept: ConceptFact(getUUID().equals("d0f9e3b1-29e4-399f-b129-36693ba4acbc"), context == Context.TYPE_CONCEPT))
			 ($destinationConcept: ConceptFact(this not isKindOf LegoSpec.ACTION_TYPE, context == Context.DESTINATION_CONCEPT))
		  )
	then
		actions.add(new FailValidatorAction(FailValidatorAction.ReasonFailed.PROCEDURE_METHOD_ACTION_REL_MESSAGE));
end
